# https://github.com/Urigo/graphql-scalars
scalar BigInt
scalar Byte
scalar Currency
scalar Date
scalar DateTime
scalar Duration
scalar EmailAddress
scalar GUID
scalar HexColorCode
scalar HSL
scalar HSLA
scalar IPv4
scalar IPv6
scalar ISBN
scalar JSON
scalar JSONObject
scalar LocalDate
scalar LocalEndTime
scalar LocalTime
scalar Long
scalar MAC
scalar NegativeFloat
scalar NegativeInt
scalar NonEmptyString
scalar NonNegativeFloat
scalar NonNegativeInt
scalar NonPositiveFloat
scalar NonPositiveInt
scalar ObjectID
scalar PhoneNumber
scalar Port
scalar PositiveFloat
scalar PositiveInt
scalar PostalCode
scalar RGB
scalar RGBA
scalar SafeInt
scalar Time
scalar UnsignedFloat
scalar UnsignedInt
scalar URL
scalar USCurrency
scalar UtcOffset
scalar UUID
scalar Void

# ********** GLOBAL *************
input InputGlobalID {
  id: Int!
}

# ********** FORGOT_PASSWORD *************
input InputForgotPassword {
  email: EmailAddress!
}

input InputResetPasswordUser {
  id: Int!
  password: String!
}

# ********** USER *************

type OutputUserProfile {
  id: Int
  username: String
  email: EmailAddress
  role: String
  lang: String
  country: String
  mobile: String
  options: [Int]
}

input InputUserCreate {
  username: String!
  email: EmailAddress!
  password: String!
  role: String!
  lang: String
  country: String
  mobile: String
  options: [Int]!
}

input InputUserUpdate {
  username: String
  email: EmailAddress
  role: String
  lang: String
  country: String
  mobile: String
  options: JSON
}
input InputUpdatePassword {
  id: Int!
  currentPassword: String
  newPassword: String!
}

input InputOtpGenerate {
  id: Int!
  currentPassword: String
}

input InputUserList {
  filter: JSON = {}
  lastSeen: Int
  limit: Int = 9
}

type OutputUserListDocs {
  id: Int
  username: String
  email: String
  role: String
  lang: String
  country: String
  mobile: String
  options: [Int]
  additional: [JSONObject]
  createdAt: Date
  updatedAt: Date
}

type OutputUserList {
  docs: [OutputUserListDocs]
}

# ********** PROJECT *************

input InputProjectCreate {
  title: String!
  description: String
  userAndRules: [JSONObject]!
  options: [Int]
}

type OutputProjectProfile {
  id: Int
  title: String
  description: String
  publicToken: String
  userAndRules: [JSONObject]
  options: [Int]
}

input InputProjectUpdate {
  title: String
  description: String
  userAndRules: [JSONObject]
  options: JSON
}

input InputProjectList {
  filter: JSON = {}
  lastSeen: Int
  limit: Int = 9
}

type OutputProjectListDocs {
  id: Int
  title: String
  publicToken: String
  owner: [JSONObject]
  options: [Int]
  additional: [JSONObject]
  createdAt: Date
}

type OutputProjectList {
  docs: [OutputProjectListDocs]
}

## project owner
type OutputProjectOwnerList {
  docs: [OutputProjectListOwnerDocs]
}

type OutputProjectListOwnerDocs {
  id: Int
  title: String
  description: String
  publicToken: String
}

input InputProjectListOwner {
  filter: JSON = {}
  lastSeen: Int
  limit: Int = 9
}

# Mutation list
type Mutation {
  UserResetPassword(data: InputResetPasswordUser): String
  UserCreate(data: InputUserCreate): JSONObject
  UserUpdate(id: Int!, data: InputUserUpdate): Int
  UserUpdatePassword(data: InputUpdatePassword): JSON
  OtpGenerate(data: InputOtpGenerate): String
  UserDelete(data: InputGlobalID): JSON
  ProjectCreate(data: InputProjectCreate): Int
  ProjectUpdate(id: Int!, data: InputProjectUpdate): Int
}

# Query list
type Query {
  UserForgotPassword(data: InputForgotPassword): String
  UserProfile(data: InputGlobalID): OutputUserProfile
  UserList(args: InputUserList): OutputUserList
  ProjectProfile(data: InputGlobalID): OutputProjectProfile
  ProjectList(args: InputProjectList): OutputProjectList
  ProjectOwnerList(args: InputProjectListOwner): OutputProjectOwnerList
}
